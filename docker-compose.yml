version: '3'

services:
  # Node.js бенчмарки
  node_fibonacci:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    volumes:
      - ./results:/app/results
    environment:
      - BENCHMARK_TYPE=fibonacci
      - FIB_N=40
      - FIB_IMPL=recursive
      - ITERATIONS=30

  node_sorting:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    volumes:
      - ./results:/app/results
    environment:
      - BENCHMARK_TYPE=sorting
      - ARRAY_SIZE=10000
      - SORT_ALGORITHM=quicksort
      - ITERATIONS=30

  node_matrix:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    volumes:
      - ./results:/app/results
    environment:
      - BENCHMARK_TYPE=matrix
      - MATRIX_SIZE=250
      - MATRIX_ALGORITHM=naive
      - ITERATIONS=20

  node_json:
    build:
      context: .
      dockerfile: docker/node/Dockerfile
    volumes:
      - ./results:/app/results
    environment:
      - BENCHMARK_TYPE=json
      - JSON_OBJECT_SIZE=1000
      - JSON_OPERATION=parse-stringify
      - ITERATIONS=30

  # Deno бенчмарки
  deno_fibonacci:
    build:
      context: .
      dockerfile: docker/deno/Dockerfile
    volumes:
      - ./results:/app/results
    environment:
      - BENCHMARK_TYPE=fibonacci
      - FIB_N=40
      - FIB_IMPL=recursive
      - ITERATIONS=30

  deno_sorting:
    build:
      context: .
      dockerfile: docker/deno/Dockerfile
    volumes:
      - ./results:/app/results
    environment:
      - BENCHMARK_TYPE=sorting
      - ARRAY_SIZE=10000
      - SORT_ALGORITHM=quicksort
      - ITERATIONS=30

  deno_matrix:
    build:
      context: .
      dockerfile: docker/deno/Dockerfile
    volumes:
      - ./results:/app/results
    environment:
      - BENCHMARK_TYPE=matrix
      - MATRIX_SIZE=250
      - MATRIX_ALGORITHM=naive
      - ITERATIONS=20

  deno_json:
    build:
      context: .
      dockerfile: docker/deno/Dockerfile
    volumes:
      - ./results:/app/results
    environment:
      - BENCHMARK_TYPE=json
      - JSON_OBJECT_SIZE=1000
      - JSON_OPERATION=parse-stringify
      - ITERATIONS=30

  # Bun бенчмарки
  bun_fibonacci:
    build:
      context: .
      dockerfile: docker/bun/Dockerfile
    volumes:
      - ./results:/app/results
    environment:
      - BENCHMARK_TYPE=fibonacci
      - FIB_N=40
      - FIB_IMPL=recursive
      - ITERATIONS=30

  bun_sorting:
    build:
      context: .
      dockerfile: docker/bun/Dockerfile
    volumes:
      - ./results:/app/results
    environment:
      - BENCHMARK_TYPE=sorting
      - ARRAY_SIZE=10000
      - SORT_ALGORITHM=quicksort
      - ITERATIONS=30

  bun_matrix:
    build:
      context: .
      dockerfile: docker/bun/Dockerfile
    volumes:
      - ./results:/app/results
    environment:
      - BENCHMARK_TYPE=matrix
      - MATRIX_SIZE=250
      - MATRIX_ALGORITHM=naive
      - ITERATIONS=20

  bun_json:
    build:
      context: .
      dockerfile: docker/bun/Dockerfile
    volumes:
      - ./results:/app/results
    environment:
      - BENCHMARK_TYPE=json
      - JSON_OBJECT_SIZE=1000
      - JSON_OPERATION=parse-stringify
      - ITERATIONS=30 